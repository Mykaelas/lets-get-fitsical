{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vanki\\\\projects\\\\lets-get-fitsical\\\\stripe\\\\web\\\\src\\\\components\\\\PaymentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontweight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16pt\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit_autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\nexport default function PaymentForm() {\n  _s();\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"/payment\", {\n          amount: 1000,\n          id\n        });\n        if (response.data.success) {\n          console.log(\"Successful Donation!\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"FormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormRow\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Donate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thank you for your donation to our LetsGetFitSical project app!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(PaymentForm, \"THwu0Rp4lfpRFR9mGZDzudl8xkQ=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["React","useState","CardElement","useElements","useStripe","axios","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontweight","fontFamily","fontSize","fontSmoothing","invalid","PaymentForm","success","setSuccess","stripe","elements","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","data","console","log","message"],"sources":["C:/Users/vanki/projects/lets-get-fitsical/stripe/web/src/components/PaymentForm.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\"\r\nimport axios from \"axios\"\r\n\r\n\r\nconst CARD_OPTIONS = {\r\n    iconStyle: \"solid\",\r\n    style: {\r\n        base: {\r\n            iconColor: \"#c4f0ff\",\r\n            color: \"#fff\",\r\n            fontweight: 500,\r\n            fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n            fontSize: \"16pt\",\r\n            fontSmoothing: \"antialiased\",\r\n            \":-webkit_autofill\": {color: \"#fce883\"},\r\n            \"::placeholder\": {color: \"#87bbfd\"}\r\n        }, \r\n        invalid: {\r\n            iconColor: \"#ffc7ee\",\r\n            color: \"#ffc7ee\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default function PaymentForm() {\r\n    const [ success, setSuccess ] = useState(false)\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n\r\nconst handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n        type: \"card\",\r\n        card: elements.getElement(CardElement)\r\n    })\r\n\r\n\r\nif(!error) {\r\n    try {\r\n        const {id} = paymentMethod\r\n        const response = await axios.post(\"/payment\", {\r\n            amount: 1000,\r\n            id\r\n        })\r\n\r\n        if(response.data.success) {\r\n            console.log(\"Successful Donation!\")\r\n            setSuccess(true)\r\n        }\r\n\r\n    } catch (error){\r\n        console.log(\"Error\", error)\r\n    }\r\n} else {\r\n    console.log(error.message)\r\n}\r\n}\r\n\r\n    return (\r\n        <>\r\n        {!success ?\r\n        <form onSubmit={handleSubmit}>\r\n            <fieldset className=\"FormGroup\">\r\n                <div className=\"FormRow\">\r\n                    <CardElement options={CARD_OPTIONS}/>\r\n                </div>\r\n            </fieldset>\r\n            <button>Donate</button>\r\n        </form> \r\n        :\r\n        <div>\r\n            <h2>Thank you for your donation to our LetsGetFitSical project app!!!</h2>\r\n        </div>\r\n        }\r\n        \r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAQ,yBAAyB;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAA;AAAA;AAGzB,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,OAAO;EAClBC,KAAK,EAAE;IACHC,IAAI,EAAE;MACFC,SAAS,EAAE,SAAS;MACpBC,KAAK,EAAE,MAAM;MACbC,UAAU,EAAE,GAAG;MACfC,UAAU,EAAE,yCAAyC;MACrDC,QAAQ,EAAE,MAAM;MAChBC,aAAa,EAAE,aAAa;MAC5B,mBAAmB,EAAE;QAACJ,KAAK,EAAE;MAAS,CAAC;MACvC,eAAe,EAAE;QAACA,KAAK,EAAE;MAAS;IACtC,CAAC;IACDK,OAAO,EAAE;MACLN,SAAS,EAAE,SAAS;MACpBC,KAAK,EAAE;IACX;EACJ;AACJ,CAAC;AAED,eAAe,SAASM,WAAW,GAAG;EAAA;EAClC,MAAM,CAAEC,OAAO,EAAEC,UAAU,CAAE,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMmB,MAAM,GAAGhB,SAAS,EAAE;EAC1B,MAAMiB,QAAQ,GAAGlB,WAAW,EAAE;EAElC,MAAMmB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAM;MAAEC,KAAK;MAAEC;IAAc,CAAC,GAAG,MAAMN,MAAM,CAACO,mBAAmB,CAAC;MAC9DC,IAAI,EAAE,MAAM;MACZC,IAAI,EAAER,QAAQ,CAACS,UAAU,CAAC5B,WAAW;IACzC,CAAC,CAAC;IAGN,IAAG,CAACuB,KAAK,EAAE;MACP,IAAI;QACA,MAAM;UAACM;QAAE,CAAC,GAAGL,aAAa;QAC1B,MAAMM,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,IAAI,CAAC,UAAU,EAAE;UAC1CC,MAAM,EAAE,IAAI;UACZH;QACJ,CAAC,CAAC;QAEF,IAAGC,QAAQ,CAACG,IAAI,CAACjB,OAAO,EAAE;UACtBkB,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;UACnClB,UAAU,CAAC,IAAI,CAAC;QACpB;MAEJ,CAAC,CAAC,OAAOM,KAAK,EAAC;QACXW,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEZ,KAAK,CAAC;MAC/B;IACJ,CAAC,MAAM;MACHW,OAAO,CAACC,GAAG,CAACZ,KAAK,CAACa,OAAO,CAAC;IAC9B;EACA,CAAC;EAEG,oBACI;IAAA,UACC,CAACpB,OAAO,gBACT;MAAM,QAAQ,EAAEI,YAAa;MAAA,wBACzB;QAAU,SAAS,EAAC,WAAW;QAAA,uBAC3B;UAAK,SAAS,EAAC,SAAS;UAAA,uBACpB,QAAC,WAAW;YAAC,OAAO,EAAEhB;UAAa;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA;MACnC;QAAA;QAAA;QAAA;MAAA,QACC,eACX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB;IAAA;MAAA;MAAA;MAAA;IAAA,QACpB,gBAEP;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAA0E;MAAA;MAAA;MAAA;IAAA;EACxE,iBAGH;AAEX;AAAC,GArDuBW,WAAW;EAAA,QAEhBb,SAAS,EACPD,WAAW;AAAA;AAAA,KAHRc,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}